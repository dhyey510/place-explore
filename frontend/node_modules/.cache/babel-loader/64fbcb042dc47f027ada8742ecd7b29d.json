{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internships\\\\Augustcode Internship\\\\Demo\\\\Place-explorer\\\\frontend\\\\src\\\\places\\\\pages\\\\UserPlaces.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PlaceList from \"../components/PlaceList\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserPlaces = () => {\n  _s();\n\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const userId = useParams().userId;\n  useEffect(() => {\n    console.log(\"inside\");\n\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/user/${userId}`);\n        setLoadedPlaces(responseData.places);\n      } catch (error) {}\n    };\n\n    fetchPlaces();\n  }, [sendRequest, userId]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), !isLoading && loadedPlaces && /*#__PURE__*/_jsxDEV(PlaceList, {\n      items: loadedPlaces\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserPlaces, \"Jjx8x1DuBEzTmxOEV/N+WrTeEac=\", false, function () {\n  return [useHttpClient, useParams];\n});\n\n_c = UserPlaces;\nexport default UserPlaces;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPlaces\");","map":{"version":3,"sources":["D:/Internships/Augustcode Internship/Demo/Place-explorer/frontend/src/places/pages/UserPlaces.js"],"names":["React","useEffect","useState","useParams","PlaceList","useHttpClient","LoadingSpinner","ErrorModal","UserPlaces","loadedPlaces","setLoadedPlaces","isLoading","error","sendRequest","clearError","userId","console","log","fetchPlaces","responseData","places"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,aAAT,QAA8B,8BAA9B;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,OAAOC,UAAP,MAAuB,+CAAvB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,EAAhD;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDT,aAAa,EAAnE;AAEA,QAAMU,MAAM,GAAGZ,SAAS,GAAGY,MAA3B;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,UAAMC,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMC,YAAY,GAAG,MAAMN,WAAW,CACnC,yCAAwCE,MAAO,EADZ,CAAtC;AAGAL,QAAAA,eAAe,CAACS,YAAY,CAACC,MAAd,CAAf;AACD,OALD,CAKE,OAAOR,KAAP,EAAc,CAAE;AACnB,KAPD;;AASAM,IAAAA,WAAW;AACZ,GAZQ,EAYN,CAACL,WAAD,EAAcE,MAAd,CAZM,CAAT;AAcA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEH,KAAnB;AAA0B,MAAA,OAAO,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,SAAS,iBACR;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOG,CAACA,SAAD,IAAcF,YAAd,iBAA8B,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YAPjC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/BD;;GAAMD,U;UAEkDH,a,EAEvCF,S;;;KAJXK,U;AAiCN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\n\r\nconst UserPlaces = () => {\r\n  const [loadedPlaces, setLoadedPlaces] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    console.log(\"inside\");\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/places/user/${userId}`\r\n        );\r\n        setLoadedPlaces(responseData.places);\r\n      } catch (error) {}\r\n    };\r\n\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"]},"metadata":{},"sourceType":"module"}