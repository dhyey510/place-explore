{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internships\\\\Augustcode Internship\\\\Demo\\\\Place-explorer\\\\frontend\\\\src\\\\user\\\\pages\\\\Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport UserList from \"../components/UserList\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const [loadedUsers, setLoadedUsers] = useState();\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  useEffect(() => {\n    const fetchUser = async () => {\n      setIsLoading(true);\n\n      try {\n        const responseData = await sendRequest(\"http://localhost:5000/api/user\");\n        setLoadedUsers(responseData.users);\n      } catch (error) {}\n    };\n\n    fetchUser();\n  }, [sendRequest]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      error: error,\n      onClear: clearError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), !isLoading && loadedUsers && /*#__PURE__*/_jsxDEV(UserList, {\n      items: loadedUsers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 37\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Users, \"wBNkxZDrMw0sDs140Yw9XFEJ2ts=\", false, function () {\n  return [useHttpClient];\n});\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["D:/Internships/Augustcode Internship/Demo/Place-explorer/frontend/src/user/pages/Users.js"],"names":["React","useEffect","useState","UserList","ErrorModal","LoadingSpinner","useHttpClient","Users","loadedUsers","setLoadedUsers","isLoading","error","sendRequest","clearError","fetchUser","setIsLoading","responseData","users"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,cAAP,MAA2B,mDAA3B;AACA,SAASC,aAAT,QAA8B,8BAA9B;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,EAA9C;AACA,QAAM;AAAEQ,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDP,aAAa,EAAnE;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,SAAS,GAAG,YAAY;AAC5BC,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACF,cAAMC,YAAY,GAAG,MAAMJ,WAAW,CACpC,gCADoC,CAAtC;AAIAH,QAAAA,cAAc,CAACO,YAAY,CAACC,KAAd,CAAd;AACD,OAND,CAME,OAAON,KAAP,EAAc,CAAE;AACnB,KATD;;AAWAG,IAAAA,SAAS;AACV,GAbQ,EAaN,CAACF,WAAD,CAbM,CAAT;AAeA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAED,KAAnB;AAA0B,MAAA,OAAO,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGH,SAAS,iBACR;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHJ,EAOG,CAACA,SAAD,IAAcF,WAAd,iBAA6B,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,YAPhC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA9BD;;GAAMD,K;UAEkDD,a;;;KAFlDC,K;AAgCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport UserList from \"../components/UserList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst Users = () => {\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const responseData = await sendRequest(\r\n          \"http://localhost:5000/api/user\"\r\n        );\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (error) {}\r\n    };\r\n\r\n    fetchUser();\r\n  }, [sendRequest]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UserList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}