{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internships\\\\Augustcode Internship\\\\Demo\\\\Place-explorer\\\\frontend\\\\src\\\\shared\\\\components\\\\FormElements\\\\Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport \"./Input.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return { ...state,\n        value: action.val,\n        isValid: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  _s();\n\n  const [inputstate, dispatch] = useReducer(inputReducer, {\n    value: \"\",\n    isValid: false\n  });\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value\n    });\n  };\n\n  const element = props.element === \"input\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputstate.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    value: inputstate.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-control`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), element, !inputstate.isValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: props.errorText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"b8wLZLjkmlHWJekHSdH0gJx8ZPc=\");\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["D:/Internships/Augustcode Internship/Demo/Place-explorer/frontend/src/shared/components/FormElements/Input.js"],"names":["React","useReducer","inputReducer","state","action","type","value","val","isValid","Input","props","inputstate","dispatch","changeHandler","event","target","element","id","placeholder","rows","label","errorText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAO,aAAP;;;AAEA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,QAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACG,GAFT;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOL,KAAP;AARJ;AAUD,CAXD;;AAaA,MAAMM,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,QAAb,IAAyBX,UAAU,CAACC,YAAD,EAAe;AACtDI,IAAAA,KAAK,EAAE,EAD+C;AAEtDE,IAAAA,OAAO,EAAE;AAF6C,GAAf,CAAzC;;AAIA,QAAMK,aAAa,GAAIC,KAAD,IAAW;AAC/BF,IAAAA,QAAQ,CAAC;AAAEP,MAAAA,IAAI,EAAE,QAAR;AAAkBE,MAAAA,GAAG,EAAEO,KAAK,CAACC,MAAN,CAAaT;AAApC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMU,OAAO,GACXN,KAAK,CAACM,OAAN,KAAkB,OAAlB,gBACE;AACE,IAAA,EAAE,EAAEN,KAAK,CAACO,EADZ;AAEE,IAAA,IAAI,EAAEP,KAAK,CAACL,IAFd;AAGE,IAAA,WAAW,EAAEK,KAAK,CAACQ,WAHrB;AAIE,IAAA,QAAQ,EAAEL,aAJZ;AAKE,IAAA,KAAK,EAAEF,UAAU,CAACL;AALpB;AAAA;AAAA;AAAA;AAAA,UADF,gBASE;AACE,IAAA,EAAE,EAAEI,KAAK,CAACO,EADZ;AAEE,IAAA,IAAI,EAAEP,KAAK,CAACS,IAAN,IAAc,CAFtB;AAGE,IAAA,QAAQ,EAAEN,aAHZ;AAIE,IAAA,KAAK,EAAEF,UAAU,CAACL;AAJpB;AAAA;AAAA;AAAA;AAAA,UAVJ;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAG,cAAjB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEI,KAAK,CAACO,EAAtB;AAAA,gBAA2BP,KAAK,CAACU;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGJ,OAFH,EAGG,CAACL,UAAU,CAACH,OAAZ,iBAAuB;AAAA,gBAAIE,KAAK,CAACW;AAAV;AAAA;AAAA;AAAA;AAAA,YAH1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAlCD;;GAAMZ,K;;KAAAA,K;AAoCN,eAAeA,KAAf","sourcesContent":["import React, { useReducer } from \"react\";\r\n\r\nimport \"./Input.css\";\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = (props) => {\r\n  const [inputstate, dispatch] = useReducer(inputReducer, {\r\n    value: \"\",\r\n    isValid: false,\r\n  });\r\n  const changeHandler = (event) => {\r\n    dispatch({ type: \"CHANGE\", val: event.target.value });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        value={inputstate.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        value={inputstate.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div className={`form-control`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputstate.isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}