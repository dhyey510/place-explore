{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internships\\\\Augustcode Internship\\\\Demo\\\\Place-explorer\\\\frontend\\\\src\\\\places\\\\pages\\\\UpdatePlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/util/validators\";\nimport \"./NewPlace.css\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdatePlace = () => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const [formstate, inputHandler, setFormData] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(`http://localhost:5000/api/places/${placeId}`);\n      } catch (error) {}\n    };\n\n    fetchPlace();\n  }, [sendRequest, placeId]);\n  useEffect(() => {\n    if (identifyPlace) {\n      setFormData({\n        title: {\n          value: identifyPlace.title,\n          isValid: true\n        },\n        description: {\n          value: identifyPlace.description,\n          isValid: true\n        }\n      }, true);\n    }\n\n    setIsLoading(false);\n  }, [setFormData, identifyPlace]);\n\n  if (!identifyPlace) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Couldn't find place! \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n  const placeUpdateSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formstate.inputs);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeUpdateSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title\",\n      onInput: inputHandler,\n      initialValue: formstate.inputs.title.value,\n      initialValid: formstate.inputs.title.isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (atleast 5 character)\",\n      onInput: inputHandler,\n      initialValue: formstate.inputs.description.value,\n      initialValid: formstate.inputs.description.isValid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formstate.isValid,\n      children: \"Update Place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdatePlace, \"BjDtQdI+sRFxAN4F/YYPjedF7oo=\", false, function () {\n  return [useHttpClient, useParams, useForm];\n});\n\n_c = UpdatePlace;\nexport default UpdatePlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePlace\");","map":{"version":3,"sources":["D:/Internships/Augustcode Internship/Demo/Place-explorer/frontend/src/places/pages/UpdatePlace.js"],"names":["React","useEffect","useState","useParams","Button","Input","Card","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","useForm","useHttpClient","UpdatePlace","isLoading","error","sendRequest","clearError","loadedPlace","setLoadedPlace","placeId","formstate","inputHandler","setFormData","title","value","isValid","description","fetchPlace","responseData","identifyPlace","setIsLoading","placeUpdateSubmitHandler","event","preventDefault","console","log","inputs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAOC,MAAP,MAAmB,6CAAnB;AACA,OAAOC,KAAP,MAAkB,4CAAlB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,SACEC,iBADF,EAEEC,mBAFF,QAGO,8BAHP;AAIA,OAAO,gBAAP;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,aAAT,QAA8B,8BAA9B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAAgDL,aAAa,EAAnE;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,EAA9C;AACA,QAAMgB,OAAO,GAAGf,SAAS,GAAGe,OAA5B;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,EAA0BC,WAA1B,IAAyCZ,OAAO,CACpD;AACEa,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,OAAO,EAAE;AAFJ,KADT;AAKEC,IAAAA,WAAW,EAAE;AACXF,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,OAAO,EAAE;AAFE;AALf,GADoD,EAWpD,KAXoD,CAAtD;AAcAvB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMyB,UAAU,GAAG,YAAY;AAC7B,UAAI;AACF,cAAMC,YAAY,GAAG,MAAMb,WAAW,CACnC,oCAAmCI,OAAQ,EADR,CAAtC;AAGD,OAJD,CAIE,OAAOL,KAAP,EAAc,CAAE;AACnB,KAND;;AAQAa,IAAAA,UAAU;AACX,GAVQ,EAUN,CAACZ,WAAD,EAAcI,OAAd,CAVM,CAAT;AAYAjB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI2B,aAAJ,EAAmB;AACjBP,MAAAA,WAAW,CACT;AACEC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAEK,aAAa,CAACN,KADhB;AAELE,UAAAA,OAAO,EAAE;AAFJ,SADT;AAKEC,QAAAA,WAAW,EAAE;AACXF,UAAAA,KAAK,EAAEK,aAAa,CAACH,WADV;AAEXD,UAAAA,OAAO,EAAE;AAFE;AALf,OADS,EAWT,IAXS,CAAX;AAaD;;AACDK,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAjBQ,EAiBN,CAACR,WAAD,EAAcO,aAAd,CAjBM,CAAT;;AAmBA,MAAI,CAACA,aAAL,EAAoB;AAClB,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAED,QAAME,wBAAwB,GAAIC,KAAD,IAAW;AAC1CA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,SAAS,CAACgB,MAAtB;AACD,GAHD;;AAKA,MAAIvB,SAAJ,EAAe;AACb,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,QAAQ,EAAEkB,wBAAvC;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,OADL;AAEE,MAAA,OAAO,EAAC,OAFV;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,KAAK,EAAC,OAJR;AAKE,MAAA,UAAU,EAAE,CAACvB,iBAAiB,EAAlB,CALd;AAME,MAAA,SAAS,EAAC,4BANZ;AAOE,MAAA,OAAO,EAAEa,YAPX;AAQE,MAAA,YAAY,EAAED,SAAS,CAACgB,MAAV,CAAiBb,KAAjB,CAAuBC,KARvC;AASE,MAAA,YAAY,EAAEJ,SAAS,CAACgB,MAAV,CAAiBb,KAAjB,CAAuBE;AATvC;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,KAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,OAAO,EAAC,UAFV;AAGE,MAAA,KAAK,EAAC,aAHR;AAIE,MAAA,UAAU,EAAE,CAAChB,mBAAmB,CAAC,CAAD,CAApB,CAJd;AAKE,MAAA,SAAS,EAAC,wDALZ;AAME,MAAA,OAAO,EAAEY,YANX;AAOE,MAAA,YAAY,EAAED,SAAS,CAACgB,MAAV,CAAiBV,WAAjB,CAA6BF,KAP7C;AAQE,MAAA,YAAY,EAAEJ,SAAS,CAACgB,MAAV,CAAiBV,WAAjB,CAA6BD;AAR7C;AAAA;AAAA;AAAA;AAAA,YAZF,eAsBE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAE,CAACL,SAAS,CAACK,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CArGD;;GAAMb,W;UACkDD,a,EAEtCP,S,EAE+BM,O;;;KAL3CE,W;AAuGN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../shared/util/validators\";\r\nimport \"./NewPlace.css\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nconst UpdatePlace = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [loadedPlace, setLoadedPlace] = useState();\r\n  const placeId = useParams().placeId;\r\n\r\n  const [formstate, inputHandler, setFormData] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  useEffect(() => {\r\n    const fetchPlace = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          `http://localhost:5000/api/places/${placeId}`\r\n        );\r\n      } catch (error) {}\r\n    };\r\n\r\n    fetchPlace();\r\n  }, [sendRequest, placeId]);\r\n\r\n  useEffect(() => {\r\n    if (identifyPlace) {\r\n      setFormData(\r\n        {\r\n          title: {\r\n            value: identifyPlace.title,\r\n            isValid: true,\r\n          },\r\n          description: {\r\n            value: identifyPlace.description,\r\n            isValid: true,\r\n          },\r\n        },\r\n        true\r\n      );\r\n    }\r\n    setIsLoading(false);\r\n  }, [setFormData, identifyPlace]);\r\n\r\n  if (!identifyPlace) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Couldn't find place! </h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const placeUpdateSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    console.log(formstate.inputs);\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"center\">\r\n        <h2>Loading</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n      <Input\r\n        id=\"title\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Title\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid title\"\r\n        onInput={inputHandler}\r\n        initialValue={formstate.inputs.title.value}\r\n        initialValid={formstate.inputs.title.isValid}\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        element=\"textarea\"\r\n        label=\"Description\"\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Please enter a valid description (atleast 5 character)\"\r\n        onInput={inputHandler}\r\n        initialValue={formstate.inputs.description.value}\r\n        initialValid={formstate.inputs.description.isValid}\r\n      />\r\n      <Button type=\"submit\" disabled={!formstate.isValid}>\r\n        Update Place\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n"]},"metadata":{},"sourceType":"module"}