{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internships\\\\Augustcode Internship\\\\Demo\\\\Place-explorer\\\\frontend\\\\src\\\\places\\\\pages\\\\NewPlace.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport \"./NewPlace.css\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPlace = () => {\n  _s();\n\n  const auth = useContext(AuthContext);\n  const {\n    isLoading,\n    error,\n    sendRequest,\n    clearError\n  } = useHttpClient();\n  const [formstate, inputHandler] = useForm({\n    title: {\n      value: \"\",\n      isValid: false\n    },\n    description: {\n      value: \"\",\n      isValid: false\n    },\n    address: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const placeSubmitHandler = event => {\n    event.preventDefault();\n    sendRequest(\"http://localhost:5000/api/places\", \"POST\", JSON.stringify({\n      title: formstate.inputs.title.value,\n      description: formstate.inputs.description.value,\n      address: formstate.inputs.address.value,\n      creator: auth.userId\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"place-form\",\n    onSubmit: placeSubmitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      id: \"title\",\n      element: \"input\",\n      type: \"text\",\n      label: \"Title\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid title.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"description\",\n      element: \"textarea\",\n      label: \"Description\",\n      validators: [VALIDATOR_MINLENGTH(5)],\n      errorText: \"Please enter a valid description (at least 5 character).\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"address\",\n      element: \"input\",\n      label: \"Address\",\n      validators: [VALIDATOR_REQUIRE()],\n      errorText: \"Please enter a valid address.\",\n      onInput: inputHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      disabled: !formstate.isValid,\n      children: \"Add Place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPlace, \"Yl7RoqylURpRif0xmcuarIMJO1k=\", false, function () {\n  return [useHttpClient, useForm];\n});\n\n_c = NewPlace;\nexport default NewPlace;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPlace\");","map":{"version":3,"sources":["D:/Internships/Augustcode Internship/Demo/Place-explorer/frontend/src/places/pages/NewPlace.js"],"names":["React","useContext","Button","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","Input","useHttpClient","AuthContext","NewPlace","auth","isLoading","error","sendRequest","clearError","formstate","inputHandler","title","value","isValid","description","address","placeSubmitHandler","event","preventDefault","JSON","stringify","inputs","creator","userId"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\r\n\r\nimport \"./NewPlace.css\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [formstate, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  const placeSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    sendRequest(\r\n      \"http://localhost:5000/api/places\",\r\n      \"POST\",\r\n      JSON.stringify({\r\n        title: formstate.inputs.title.value,\r\n        description: formstate.inputs.description.value,\r\n        address: formstate.inputs.address.value,\r\n        creator: auth.userId,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n      <Input\r\n        id=\"title\"\r\n        element=\"input\"\r\n        type=\"text\"\r\n        label=\"Title\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid title.\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        element=\"textarea\"\r\n        label=\"Description\"\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText=\"Please enter a valid description (at least 5 character).\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Input\r\n        id=\"address\"\r\n        element=\"input\"\r\n        label=\"Address\"\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText=\"Please enter a valid address.\"\r\n        onInput={inputHandler}\r\n      />\r\n      <Button type=\"submit\" disabled={!formstate.isValid}>\r\n        Add Place\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n"]},"metadata":{},"sourceType":"module"}