{"ast":null,"code":"var _jsxFileName = \"D:\\\\Internships\\\\Augustcode Internship\\\\Demo\\\\Place-explorer\\\\frontend\\\\src\\\\user\\\\pages\\\\Users.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport UserList from \"../components/UserList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Users = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n  const [loadedUsers, setLoadedUsers] = useState();\n  useEffect(() => {\n    const sendRequest = async () => {\n      setIsLoading(true);\n\n      try {\n        const response = await fetch(\"http://localhost:5000/api/user\");\n        const responseData = await response.json();\n\n        if (!response.ok) {\n          throw new Error(responseData.message);\n        }\n\n        setLoadedUsers(responseData.users);\n      } catch (error) {\n        setError(error.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    sendRequest();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserList, {\n    items: USERS\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Users, \"Q4vun3yn22XWADhJ+SI1yd+xh60=\");\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["D:/Internships/Augustcode Internship/Demo/Place-explorer/frontend/src/user/pages/Users.js"],"names":["React","useEffect","useState","UserList","Users","isLoading","setIsLoading","error","setError","loadedUsers","setLoadedUsers","sendRequest","response","fetch","responseData","json","ok","Error","message","users","USERS"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,QAAP,MAAqB,wBAArB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,EAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,WAAW,GAAG,YAAY;AAC9BL,MAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,UAAI;AACF,cAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAA5B;AAEA,cAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAA3B;;AAEA,YAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,gBAAM,IAAIC,KAAJ,CAAUH,YAAY,CAACI,OAAvB,CAAN;AACD;;AAEDR,QAAAA,cAAc,CAACI,YAAY,CAACK,KAAd,CAAd;AACD,OAVD,CAUE,OAAOZ,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAK,CAACW,OAAP,CAAR;AACD;;AAEDZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAjBD;;AAkBAK,IAAAA,WAAW;AACZ,GApBQ,EAoBN,EApBM,CAAT;AAsBA,sBAAO,QAAC,QAAD;AAAU,IAAA,KAAK,EAAES;AAAjB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA5BD;;GAAMhB,K;;KAAAA,K;AA8BN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport UserList from \"../components/UserList\";\r\n\r\nconst Users = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/api/user\");\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      }\r\n\r\n      setIsLoading(false);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  return <UserList items={USERS} />;\r\n};\r\n\r\nexport default Users;\r\n"]},"metadata":{},"sourceType":"module"}